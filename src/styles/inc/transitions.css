/* The default transition for non-fragment visits */
#swup.is-changing {
  transition-property: opacity, transform;
  transition-duration: 250ms;
}
#swup.is-animating {
  opacity: 0;
  transform: translateY(-20px);
}
#swup.is-leaving {
  transform: translateY(20px);
}

/*
 * The transition when filtering the characters.
 * Here, we are animating the `.teaeser` elements individually
 */
#list.is-changing {
  --duration-leave: 150ms;
  --duration-enter: 400ms;
  transition-duration: var(--duration-enter);
}
#list.is-leaving {
  transition-duration: var(--duration-leave);
}
#list.is-changing .teaser {
  transition-property: opacity, transform;
  transition-duration: var(--duration-enter);
  transition-timing-function: cubic-bezier(0.230, 1.000, 0.320, 1.000); /* easeOutQuint */
}
#list.is-animating .teaser {
  opacity: 0;
  transform: scale(0.75);
}
/* Change easing and duration for the leave-phase */
#list.is-leaving .teaser {
  transition-timing-function: ease-in;
  transition-duration: var(--duration-leave);
}

/*
* The animation for opening and closing an overlay
*/
#overlay.to-open-overlay.is-changing,
#overlay.to-close-overlay.is-changing {
  transition: opacity 300ms;
}
#overlay.to-open-overlay.is-animating,
#overlay.to-close-overlay.is-animating {
  opacity: 0;
}

/* Zoom-Effect for the overlay content */
#overlay.to-open-overlay.is-changing #detail,
#overlay.to-close-overlay.is-changing #detail {
  transition: transform 150ms;
  transform: scale(1);
}
#overlay.to-open-overlay.is-animating #detail,
#overlay.to-close-overlay.is-leaving #detail {
  transform: scale(0.95);
}

/*
* The animation between overlays. Directional animation based on data-swup-animation
*/
#overlay.to-switch-overlay.is-changing {
  transition-duration: 200ms;
}
#overlay.to-switch-overlay.is-changing #detail {
  transition: opacity 200ms, transform 200ms;
}
#overlay.to-switch-overlay.to-next #detail {
  --direction: 1;
}
#overlay.to-switch-overlay.to-previous #detail {
  --direction: -1;
}
#overlay.to-switch-overlay.is-animating #detail {
  opacity: 0;
  transform: translateX(calc(40px * var(--direction)));
}
#overlay.to-switch-overlay.is-leaving #detail {
  transform: translateX(calc(40px * var(--direction) * -1));
}


/* cut */
